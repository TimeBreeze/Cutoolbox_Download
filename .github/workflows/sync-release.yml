name: Sync APK and Release Info

on:
  schedule:
    # 每天UTC时间00:00自动检查新release，可以根据需要调整cron表达式
    - cron: '0 0 * * *'
  workflow_dispatch:
    # 允许手动触发workflow

jobs:
  sync-apk-and-release-info:
    runs-on: ubuntu-latest
    steps:
      # 获取最新发布的信息并保存为工件
      - name: Get latest release info
        id: get_release_info
        run: |
          # 使用GitHub API获取最新发布信息，包括预发布版本
          LATEST_RELEASE=$(curl -s "https://api.github.com/repos/chenzyadb/CuprumTurbo-Scheduler/releases" | jq -r 'map(select(.prerelease))[0].tag_name')
          if [ -n "$LATEST_RELEASE" ]; then
            echo "Latest Release: $LATEST_RELEASE"
            curl -s "https://api.github.com/repos/chenzyadb/CuprumTurbo-Scheduler/releases" | jq '.' > release_info.json
            jq -r '.' release_info.json > release_info.txt
            echo "::set-output name=release_info::release_info.txt"
          else
            echo "No release found."
          fi
      
      # 上传获取的最新发布信息文件为工件
      - name: Upload release info as artifact
        uses: actions/upload-artifact@v2
        with:
          name: release_info
          path: ${{ steps.get_release_info.outputs.release_info }}

      # 检查是否在 git 仓库中，如果是，则提交获取的最新发布信息文件到当前仓库
      - name: Commit release info to current repository
        if: success() && failure()
        run: |
          if [ -d .git ]; then
            git config --global user.name 'github-actions[bot]'
            git config --global user.email 'github-actions[bot]@users.noreply.github.com'
            git add release_info.json
            git commit -m "Update release info"
            git push origin HEAD:main
          fi